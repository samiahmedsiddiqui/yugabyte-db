CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3));
CREATE INDEX ON items USING ybdummyann (embedding vector_l2_ops);
WARNING:  ybdummyann is meant for internal-testing only and does not yield ordered results
INSERT INTO items VALUES (1, '[1.0, 0.4, 0.3]');
INSERT INTO items VALUES (2, '[0.001, 0.432, 0.32]');
\d items
                               Table "public.items"
  Column   |   Type    | Collation | Nullable |              Default
-----------+-----------+-----------+----------+-----------------------------------
 id        | bigint    |           | not null | nextval('items_id_seq'::regclass)
 embedding | vector(3) |           |          |
Indexes:
    "items_pkey" PRIMARY KEY, lsm (id HASH)
    "items_embedding_idx" ybdummyann (embedding)

EXPLAIN (COSTS OFF) SELECT * FROM items ORDER BY embedding <-> '[1.0, 0.4, 0.3]' LIMIT 5;
                       QUERY PLAN
---------------------------------------------------------
 Limit
   ->  Index Scan using items_embedding_idx on items
         Order By: (embedding <-> '[1,0.4,0.3]'::vector)
(3 rows)

SELECT * FROM items ORDER BY embedding <-> '[1.0, 0.4, 0.3]' LIMIT 5;
 id |     embedding
----+--------------------
  2 | [0.001,0.432,0.32]
  1 | [1,0.4,0.3]
(2 rows)

EXPLAIN (COSTS OFF) SELECT embedding FROM items ORDER BY embedding <-> '[1.0, 0.4, 0.3]' LIMIT 5;
                        QUERY PLAN
----------------------------------------------------------
 Limit
   ->  Index Only Scan using items_embedding_idx on items
         Order By: (embedding <-> '[1,0.4,0.3]'::vector)
(3 rows)

SELECT embedding FROM items ORDER BY embedding <-> '[1.0, 0.4, 0.3]' LIMIT 5;
     embedding
--------------------
 [0.001,0.432,0.32]
 [1,0.4,0.3]
(2 rows)

DELETE FROM items WHERE id = 1;
SELECT * FROM items ORDER BY embedding <-> '[1.0, 0.4, 0.3]' LIMIT 5;
 id |     embedding
----+--------------------
  2 | [0.001,0.432,0.32]
(1 row)

DROP TABLE items;
